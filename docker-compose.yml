version: "3.7"

services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: ee461l-server
    container_name: ee461l_flask-server
    command: flask run --host=0.0.0.0
    volumes:
      - ./server/:/usr/src/app
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=api
      - FLASK_ENV=development
      - MONGODB_DATABASE=ee461l_mongodb
      - MONGODB_USERNAME=admin
      - MONGODB_PASSWORD=password
      - MONGODB_HOST=ee461l_mongodb
    networks:
      - app-network
    depends_on:
      - mongodb
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    image: ee461l_client
    container_name: ee461l_react-client
    command: npm start
    volumes:
      - ./client/:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - server
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app-network
  mongodb:
    image: mongo:latest
    container_name: ee461l_mongodb
    hostname: ee461l_mongodb
    restart: unless-stopped
    command: --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_HOSTNAME: ee461l_mongodb
      MONGO_INITDB_USERNAME: dev
      MONGO_INITDB_PASSWORD: password
    volumes:
      - mongodbdata:/data/dir
    ports:
      - "27017:27017"
    networks:
      - app-network
  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: ee461l_mongodb
    depends_on:
      - mongodb
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
volumes:
  data-volume:
  node_modules:
  web-root:
    driver: local
  mongodbdata:
    driver: local
  appdata:
    driver: local
