version: "3.7"

services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: ee461l-server
    container_name: ee461l_flask-server
    command: flask run --host=0.0.0.0
    volumes:
      - ./server/:/usr/src/app
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - MONGODB_DATABASE=ee461l_DB
      - MONGODB_USERNAME=admin
      - MONGODB_PASSWORD=password
      - MONGODB_HOST=mongodb
    networks:
      - app-network
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    image: ee461l_client
    container_name: ee461l_react-client
    command: npm start
    volumes:
      - ./client/:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - server
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app-network
  mongodb:
    image: mongo
    container_name: ee461l_mongoDB
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: "password"
      MONGO_INITDB_DATABASE: ee461l_DB
      MONGODB_DATA_DIR: /data/db
    volumes:
      - mongodbdata:/data/dir
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  data-volume:
  node_modules:
  web-root:
    driver: local
  mongodbdata:
    driver: local
  appdata:
    driver: local
